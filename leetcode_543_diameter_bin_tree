# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        diameter=0
        def longest_path(node):
            if not node:
                return 0
            
            nonlocal diameter

            l_path=longest_path(node.left)
            r_path=longest_path(node.right)

            diameter=max(diameter,l_path+r_path)  #no need to add "2"
            return max(l_path,r_path) + 1

        longest_path(root)
        return diameter


        
