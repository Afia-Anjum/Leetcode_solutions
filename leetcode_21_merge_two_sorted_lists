# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        merged_list=ListNode()
        head=merged_list 
        flag1=0
        flag2=0
        while (list1) or (list2):
            if list1==None:
                flag1=1
                break
            if list2==None:
                flag2=1
                break
            if list1.val < list2.val:
                merged_list.val=list1.val
                list1=list1.next
                merged_list.next=ListNode()
                merged_list=merged_list.next

            else:
                merged_list.val=list2.val
                list2=list2.next
                merged_list.next=ListNode()
                merged_list=merged_list.next
        if flag1==1:
            while(list2):
                merged_list.val=list2.val
                list2=list2.next
                if list2:
                    merged_list.next=ListNode()
                    merged_list=merged_list.next
        if flag2==1:
            while(list1):
                merged_list.val=list1.val
                list1=list1.next
                if list1:
                    merged_list.next=ListNode()
                    merged_list=merged_list.next
        if flag1==0 and flag2==0:
            return None
        return head
